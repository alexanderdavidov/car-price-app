{"version":3,"sources":["components/TopButtonsMenu/TopButtonsMenu.js","components/Buttons/ListButton/ListButton.js","components/Buttons/CardButton/CardButton.js","components/SwitchView/SwitchView.js","components/Items/Item/Item.js","components/Items/Items.js","components/BottomForm/BottomForm.js","App.js","serviceWorker.js","index.js"],"names":["topButtonsMenu","props","react_default","a","createElement","className","onClick","onClickCopyLastToStart","onClickCopyFirstToEnd","onClickDeleteFirst","onClickDeleteLast","listButton","color","type","onClickListButton","width","height","viewBox","xmlns","id","fill","fillRule","rx","ry","transform","y","cardButton","onClickCardButton","switchView","switchViewTitleText","ListButton_ListButton","CardButton_CardButton","item","margin","flexDirection","textAlignIndex","arrAttributes","attributes","map","el","index","key","style","textAlign","title","display","description","items","flexWrap","itemArr","data","Item_Item","bottomForm","borderStyleTitle","borderStyleAttributes","borderStyleDescription","check","border","onChange","onChangeTitle","value","titleValue","placeholder","onChangeAttributes","attributesValue","onChangeDescription","descriptionValue","onClickAdd","App","state","Object","objectSpread","dataObj","currentItem","handlerListButton","_this","setState","handlerCardButton","handlerTitle","e","handlerInput","handlerAttributes","handlerDescription","handlerAdd","preventDefault","newTitle","newAttributes","replace","newDescription","newObj","setFalseToCheck","code","setTrueToCheck","length","attributesArr","split","filter","push","handlerCopyLastToStart","lastElement","unshift","handlerCopyFirstToEnd","firstElement","handlerDeleteFirst","shift","handlerDeleteLast","pop","this","target","TopButtonsMenu_TopButtonsMenu","SwitchView_SwitchView","Items_Items","BottomForm_BottomForm","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca25ae7a.chunk.js","sourcesContent":["import React from 'react';\n// styles\nimport './TopButtonsMenu.css';\n\nconst topButtonsMenu = (props) => {\n  return (\n    <div className='TopButtonsMenu'>\n      <button onClick={props.onClickCopyLastToStart}>Добавить в начало</button>\n      <button onClick={props.onClickCopyFirstToEnd}>Добавить в конец</button>\n      <button onClick={props.onClickDeleteFirst}>Удалить первый</button>\n      <button onClick={props.onClickDeleteLast}>Удалить последний</button>\n    </div>\n  );\n};\n\nexport default topButtonsMenu;\n","import React from 'react';\n// styles\nimport './ListButton.css';\n\nconst listButton = (props) => {\n  let color = '#FFF';\n  if (props.type === 'list') color = '#d7ffe6';\n  return (\n    <div className='ListButton' onClick={props.onClickListButton}>\n      <svg width='40' height='40' viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'>\n        <g id='List' fill='none' fillRule='evenodd'>\n          <rect rx='50' ry='50' fill={color} width='300' height='300' />\n          <g id='Group' transform='translate(78 78)' fill='#38B86F'>\n            <rect id='Rectangle' width='145' height='35' rx='5' />\n            <rect id='Rectangle' y='55' width='145' height='35' rx='5' />\n            <rect id='Rectangle' y='110' width='145' height='35' rx='5' />\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default listButton;\n","import React from 'react';\n// styles\nimport './CardButton.css';\n\nconst cardButton = (props) => {\n  let color = '#FFF';\n  if (props.type === 'card') color = '#d7ffe6';\n  return (\n    <div className='CardButton' onClick={props.onClickCardButton}>\n      <svg width='40' height='40' viewBox='0 0 300 300' xmlns='http://www.w3.org/2000/svg'>\n        <g id='Card' fill='none' fillRule='evenodd'>\n          <rect rx='50' ry='50' fill={color} width='300' height='300' />\n          <g id='Group-2' transform='translate(78 78)' fill='#38B86F'>\n            <g id='Group'>\n              <rect id='Rectangle' width='35' height='35' rx='5' />\n              <rect id='Rectangle' y='55' width='35' height='35' rx='5' />\n              <rect id='Rectangle' y='110' width='35' height='35' rx='5' />\n            </g>\n            <g id='Group' transform='translate(55)'>\n              <rect id='Rectangle' width='35' height='35' rx='5' />\n              <rect id='Rectangle' y='55' width='35' height='35' rx='5' />\n              <rect id='Rectangle' y='110' width='35' height='35' rx='5' />\n            </g>\n            <g id='Group' transform='translate(110)'>\n              <rect id='Rectangle' width='35' height='35' rx='5' />\n              <rect id='Rectangle' y='55' width='35' height='35' rx='5' />\n              <rect id='Rectangle' y='110' width='35' height='35' rx='5' />\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default cardButton;\n","import React from 'react';\n// components\nimport ListButton from '../Buttons/ListButton/ListButton';\nimport CardButton from '../Buttons/CardButton/CardButton';\n// styles\nimport './SwitchView.css';\n\n\nconst switchView = (props) => {\n  let switchViewTitleText = 'Список объектов';\n  if (props.type === 'card') switchViewTitleText = 'Карточки объектов';\n  return (\n    <div className='SwitchView'>\n      <div className='SwitchViewTitle'>{switchViewTitleText}</div>\n      <div className='SwitchViewButtonsWrapper'>\n        <ListButton type={props.type} onClickListButton={props.onClickListButton} />\n        <CardButton type={props.type} onClickCardButton={props.onClickCardButton} />\n      </div>\n    </div>\n  );\n};\n\nexport default switchView;\n","import React from 'react';\n// styles\nimport './Item.css';\n\nconst item = (props) => {\n\n  let margin = '0 10px 0 0';\n  let flexDirection = 'row';\n  let textAlignIndex = 'left';\n  let width = '100%';\n  let height = 'auto';\n\n  if (props.type === 'card') {\n    margin = '0';\n    flexDirection = 'column';\n    textAlignIndex = 'right';\n    width = '30%';\n    height = '400px';\n  }\n\n  let arrAttributes = props.attributes.map((el,index) => {\n    return <div key={index} style={{margin: margin}} className='Attributes'>{el}</div>;\n  });\n\n  return (\n    <div style={{width: width, height: height}} className='Item'>\n      <div style={{textAlign: textAlignIndex}} className='Index'>{props.index + 1}</div>\n      <div className='Title'>{props.title}</div>\n      <div style={{display: 'flex', flexDirection: flexDirection}}>\n        {arrAttributes}\n      </div>\n      <div className='Description'>{props.description}</div>\n    </div>\n  );\n};\n\nexport default item;\n","import React from 'react';\n// components\nimport Item from './Item/Item';\n// styles\nimport './Items.css';\n\nconst items = (props) => {\n\n  let flexDirection = 'column';\n  let flexWrap = 'nowrap';\n\n  if (props.type === 'card') {\n    flexDirection = 'row';\n    flexWrap = 'wrap';\n  }\n\n  let itemArr = props.data.data.map((el, index) => {\n    return <Item\n              key={index}\n              type={props.type}\n              index={index}\n              title={el.title}\n              attributes={el.attributes}\n              description={el.description} />;\n  });\n\n  return (\n    <div style={{flexWrap: flexWrap, flexDirection: flexDirection}} className='Items'>\n      {itemArr}\n    </div>\n  );\n};\n\nexport default items;\n","import React from 'react';\n// styles\nimport './BottomForm.css';\n\nconst bottomForm = (props) => {\n  let borderStyleTitle = '1px solid #ffffff';\n  let borderStyleAttributes = '1px solid #ffffff';\n  let borderStyleDescription = '1px solid #ffffff';\n\n  if (props.check.title === false) {\n    borderStyleTitle = '1px solid #B32F48';\n  }\n\n  if (props.check.attributes === false) {\n    borderStyleAttributes = '1px solid #B32F48';\n  }\n\n  if (props.check.description === false) {\n    borderStyleDescription = '1px solid #B32F48';\n  }\n\n\n  return (\n    <div className='Wrapper'>\n      <div className='BottomFormTitle'>Добавить новый объект</div>\n      <form className='BottomForm'>\n        <label>\n          Заголовок *\n          <br />\n          <input\n            style={{border: borderStyleTitle}}\n            onChange={props.onChangeTitle}\n            value={props.titleValue}\n            type=\"text\"\n            placeholder='Заголовок не более 50 символов' />\n        </label>\n        <label>\n          Пункты\n          <br />\n          <input\n            style={{border: borderStyleAttributes}}\n            onChange={props.onChangeAttributes}\n            value={props.attributesValue}\n            type=\"text\"\n            placeholder='Не более 7 пунктов. Добавьте пункты через запятую. Не более 200 символов на все пункты.'/>\n        </label>\n        <label>\n          Описание\n          <br />\n          <input\n            style={{border: borderStyleDescription}}\n            onChange={props.onChangeDescription}\n            value={props.descriptionValue}\n            type=\"text\"\n            placeholder='Описание не более 200 символов'/>\n        </label>\n        <button onClick={props.onClickAdd}>Добавить</button>\n      </form>\n    </div>\n  );\n};\n\nexport default bottomForm;\n","import React, { Component } from 'react';\n// components\nimport TopButtonsMenu from './components/TopButtonsMenu/TopButtonsMenu';\nimport SwitchView from './components/SwitchView/SwitchView';\nimport Items from './components/Items/Items';\nimport BottomForm from './components/BottomForm/BottomForm';\n\n// data\nimport dataObj from './data/data';\n// styles\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    check: {\n      title: true,\n      attributes: true,\n      description: true\n    },\n    data: {...dataObj},\n    type: 'list',\n    currentItem: {\n      title: '',\n      attributes: '',\n      description: ''\n    }\n  }\n\n  handlerListButton = () => {\n    this.setState({type: 'list'});\n  }\n\n  handlerCardButton = () => {\n    this.setState({type: 'card'});\n  }\n\n  handlerInput(code, e) {\n    let currentItem = {...this.state.currentItem};\n    currentItem[code] = e.target.value;\n    this.setState({\n      currentItem: currentItem\n    });\n  }\n\n  handlerTitle = (e) => {\n    this.handlerInput('title', e);\n  }\n\n  handlerAttributes = (e) => {\n    this.handlerInput('attributes', e);\n  }\n\n  handlerDescription = (e) => {\n    this.handlerInput('description', e);\n  }\n\n  handlerAdd = (e) => {\n    e.preventDefault();\n    let currentItem = {...this.state.currentItem};\n    let data = {...this.state.data};\n    let check = {...this.state.check};\n    let newTitle = currentItem.title;\n    let newAttributes = (currentItem.attributes).replace(/\\s/g, \"\");\n    let newDescription = currentItem.description;\n    let newObj = {};\n\n    let setFalseToCheck = (code) => {\n      check[code] = false;\n      this.setState({\n        check: check\n      });\n    }\n\n    let setTrueToCheck = (code) => {\n      check[code] = true;\n      this.setState({\n        check: check\n      });\n    }\n\n    if (newTitle.length > 50 || newTitle.length === 0) {\n      setFalseToCheck('title');\n    } else {\n      setTrueToCheck('title');\n    }\n\n    if (newDescription.length > 200) {\n      setFalseToCheck('description');\n    } else {\n      setTrueToCheck('description');\n    }\n\n    let attributesArr = newAttributes.split(',');\n    attributesArr = attributesArr.filter(el => el.length > 0);\n\n    if (newAttributes.length > 200 || attributesArr.length > 7) {\n      setFalseToCheck('attributes');\n    } else {\n      setTrueToCheck('attributes');\n    }\n\n    if (newTitle.length <= 50 &&\n        newTitle.length !== 0 &&\n        newDescription.length <= 200 &&\n        newAttributes.length <= 200 &&\n        attributesArr.length <= 7) {\n      newObj.title = newTitle;\n      newObj.description = newDescription;\n      newObj.attributes = attributesArr;\n      data.data.push(newObj);\n      this.setState({\n        data: data,\n        currentItem: {\n          title: '',\n          attributes: '',\n          description: ''\n        }\n      });\n    }\n  }\n\n\n  handlerCopyLastToStart = () => {\n    let data = {...this.state.data};\n    if (data.data.length > 0) {\n      let lastElement = data.data[data.data.length - 1];\n      data.data.unshift(lastElement);\n      this.setState({\n        data: data\n      });\n    }\n  }\n\n  handlerCopyFirstToEnd = () => {\n    let data = {...this.state.data};\n    if (data.data.length > 0) {\n      let firstElement = data.data[0];\n      data.data.push(firstElement);\n      this.setState({\n        data: data\n      });\n    }\n  }\n\n  handlerDeleteFirst = () => {\n    let data = {...this.state.data};\n    if (data.data.length > 0) {\n      data.data.shift();\n      this.setState({\n        data: data\n      });\n    }\n  }\n\n  handlerDeleteLast = () => {\n    let data = {...this.state.data};\n    if (data.data.length > 0) {\n      data.data.pop();\n      this.setState({\n        data: data\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopButtonsMenu\n          onClickDeleteLast={this.handlerDeleteLast}\n          onClickDeleteFirst={this.handlerDeleteFirst}\n          onClickCopyFirstToEnd={this.handlerCopyFirstToEnd}\n          onClickCopyLastToStart={this.handlerCopyLastToStart} />\n        <SwitchView\n          type={this.state.type}\n          onClickListButton={this.handlerListButton}\n          onClickCardButton={this.handlerCardButton} />\n        <Items data={this.state.data} type={this.state.type} />\n        <BottomForm\n          check={this.state.check}\n          titleValue={this.state.currentItem.title}\n          attributesValue={this.state.currentItem.attributes}\n          descriptionValue={this.state.currentItem.description}\n          onClickAdd={this.handlerAdd}\n          onChangeTitle={this.handlerTitle}\n          onChangeAttributes={this.handlerAttributes}\n          onChangeDescription={this.handlerDescription} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}